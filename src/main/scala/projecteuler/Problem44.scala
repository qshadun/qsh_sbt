package projecteuler
/**
Pentagon numbers
Problem 44
Pentagonal numbers are generated by the formula, Pn=n(3n-1)/2. The first ten pentagonal numbers are:

1, 5, 12, 22, 35, 51, 70, 92, 117, 145, ...

It can be seen that P4 + P7 = 22 + 70 = 92 = P8. However, their difference, 70 - 22 = 48, is not pentagonal.

Find the pair of pentagonal numbers, Pj and Pk, for which their sum and difference are pentagonal and D = |Pk - Pj| is minimised; 
what is the value of D?
 */
object Problem44 {
  def main(args: Array[String]): Unit = {
    val pentagons = Stream.tabulate(Int.MaxValue){x => x * (3 * x - 1) /2}.tail
//    val headsSet = pentagons.take(2500).toSet
////    def isPentagons(n: Int) = pentagons.dropWhile(_ < n).head == n
//    def isPentagons(n: Int) = headsSet.contains(n)
//    val pairs = pentagons.take(1500).dropWhile(_< 3604).toList.combinations(2).filter{case x :: y :: Nil => isPentagons(x + y) && isPentagons(y - x)}
//    println(pairs.toList)
//    println(pairs.map(x => x(2) - x(1)).min)
    
    pentagons.find{x =>
      val before = pentagons.takeWhile(_ < x)
      val after = pentagons.dropWhile(_ < x)
      println(before + "," + after)
      val ps = after.zip(after.tail).takeWhile(t => t._2 - t._1 <= x).map(_._2).toList
      println(ps)
      val qualified = ps.filter(y => ps.contains(y + x)).filter(y => y - x == x || ps.contains(y - x) || before.contains(y - x))
      println(x + "," + qualified)
      qualified.size > 0
    }
  }
}